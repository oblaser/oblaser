
save.position=1



USE_DARK_THEME=0
USE_MARKDOOWN=1


# adding JSON format
file.patterns.json=*.json;*.jsonc
filter.json=JSON (json jsonc)|$(file.patterns.json)|
*filter.json=$(filter.json)
lexer.$(file.patterns.json)=cpp

# adding potoroo job format
file.patterns.potorooJob=*.pjob;potorooJobs
filter.potorooJob=potoroo job (pjob)|$(file.patterns.potorooJob)|
*filter.potorooJob=$(filter.potorooJob)
lexer.$(file.patterns.potorooJob)=bash





if USE_MARKDOOWN
	# https://fossies.org/linux/gscite/markdown.properties
	# edited by Oliver Blaser
	# https://github.com/oblaser/oblaser/tree/main/environment/SciTE
	
	# Define SciTE settings for Markdown files.
	
	file.patterns.markdown=*.md;*.markdown
	
	filter.markdown=Markdown (md markdown)|$(file.patterns.markdown)|
	*filter.markdown=$(filter.markdown)
	
	lexer.$(file.patterns.markdown)=markdown
	
	*language.markdown=Markdo&wn|markdown||
	
	# SCE_MARKDOWN_DEFAULT: Regular text
	style.markdown.0=
	
	# SCE_MARKDOWN_LINE_BEGIN: Special, e.g. end-of-line codes if enabled
	style.markdown.1=
	
	# SCE_MARKDOWN_STRONG1: "**" - Strong emphasis (bold)
	style.markdown.2=fore:#224466,bold
	# SCE_MARKDOWN_STRONG2: "__" - Strong emphasis (bold)
	style.markdown.3=fore:#224466,bold
	
	# SCE_MARKDOWN_EM1: '*' - Emphasis (italic)
	style.markdown.4=fore:#663300,italics
	# SCE_MARKDOWN_EM2: '_' - Emphasis (italic)
	style.markdown.5=fore:#663300,italics
	
	# SCE_MARKDOWN_HEADER1: "#" - Level-one header
	style.markdown.6=fore:#5183C4,bold,$(font.monospace)
	# SCE_MARKDOWN_HEADER2: "##" - Level-two header
	style.markdown.7=fore:#5183C4,bold,$(font.monospace)
	# SCE_MARKDOWN_HEADER3: "###" - Level-three header
	style.markdown.8=fore:#5183C4,bold,$(font.monospace)
	# SCE_MARKDOWN_HEADER4: "####" - Level-four header
	style.markdown.9=fore:#5183C4,bold,$(font.monospace)
	# SCE_MARKDOWN_HEADER5: "#####" - Level-five header
	style.markdown.10=fore:#5183C4,bold,$(font.monospace)
	# SCE_MARKDOWN_HEADER6: "######" - Level-six header
	style.markdown.11=fore:#5183C4,bold,$(font.monospace)
	
	# SCE_MARKDOWN_PRECHAR: Prechar (up to three indent spaces, e.g. for a second-level list)
	#style.markdown.12=back:#EEEEAA,fore:#000000
	style.markdown.12=
	
	# SCE_MARKDOWN_ULIST_ITEM: "- ", "* ", "+ " - Unordered list item
	style.markdown.13=fore:#555555
	# SCE_MARKDOWN_OLIST_ITEM: "1. " to "9. ", "#. " - Ordered list item
	style.markdown.14=fore:#555555
	
	# SCE_MARKDOWN_BLOCKQUOTE: "> " - Block quote
	#style.markdown.15=fore:#000088
	#style.markdown.15=fore:#00C700
	style.markdown.15=fore:#00A800
	
	# SCE_MARKDOWN_STRIKEOUT: "~~" - Strikeout
	#style.markdown.16=back:#A9BA9D,fore:#18453B,$(font.monospace)
	style.markdown.16=back:#F0F0F0,fore:#575757
	
	# SCE_MARKDOWN_HRULE: "---", "***", "___" - Horizontal rule
	style.markdown.17=fore:#555555,bold,$(font.monospace)
	
	# SCE_MARKDOWN_LINK: "[]", "![]" - Link or image
	style.markdown.18=fore:#0000AA,underlined
	
	# SCE_MARKDOWN_CODE: '`' - Inline code
	style.markdown.19=back:#EEEEEE,fore:#000088,$(font.monospace)
	# SCE_MARKDOWN_CODE2: "``" - Inline code (quotes code containing a single backtick)
	style.markdown.20=back:#EEEEEE,fore:#000088,$(font.monospace)
	# SCE_MARKDOWN_CODEBK: "~~~" - Code block
	style.markdown.21=back:#EEEEEE,fore:#000088,$(font.monospace)





if USE_DARK_THEME
	###
	#  https://github.com/robertluwang/scite-setting
	#  scite dark theme
	#  append to end of SciTEGlobal.properties
	#  or place to SciTEUser.properties
	#  Robert Wang
	#  Nov 15, 2017
	 
	#  GUI  
	 
	tabbar.multiline=1
	toolbar.visible=1
	wrap=1
	line.margin.visible=1
	statusbar.visible=1
	 
	#  add  Go 
	source.files=*.asm;*.c;*.cc;*.cpp;*.cxx;*.cs;*.h;*.hh;*.hxx;*.hpp;\
	*.txt;*.scite;\
	*.idl;*.odl;*.rc;*.rc2;*.dlg;*.def;\
	*.vb;*.vbs;*.bas;*.frm;*.cls;*.ctl;\
	*.java;*.js;*.go;*.py;*.pyw;*.pl;*.rb;*.cgi;*.lua;*.conf;\
	make*;*.mak;\
	*.properties;*.html;*.xml;*.iface;*.bat;*.e;*.m;*.mm;\
	*.sh;*.patch
	 
	# Misc colours
	fold.margin.colour=#505050
	fold.margin.highlight.colour=#101010
	whitespace.fore=#508050
	selection.back=#FFFFFF
	caret.fore=#FFFFFF
	# Additional caret and selection settings
	selection.alpha=50
	caret.line.back=#EFEFEF
	caret.line.back.alpha=20
	 
	# Give symbolic names to the set of colours used in the standard styles.
	colour.generalText.fore=#b0b0b0
	colour.generalComment.fore=#008000
	colour.code.comment.box=fore:$(colour.generalComment.fore)
	colour.code.comment.line=fore:$(colour.generalComment.fore)
	colour.code.comment.doc=fore:$(colour.generalComment.fore)
	colour.text.comment=fore:#0000FF,back:#D0F0D0
	colour.other.comment=fore:#A0C0C0
	colour.embedded.comment=back:#E0EEFF
	colour.embedded.js=back:#F0F0FF
	colour.notused=back:#FF0000
	colour.number=fore:#d8b5ff
	colour.keyword=fore:#00A0C0
	colour.keyword2=fore:#B99C4C
	colour.keyword3=fore:#7788DD
	colour.string=fore:#B0B000
	colour.char=fore:#B0B000
	colour.operator=fore:#eeeeee
	colour.preproc=fore:#7F7F00
	colour.error=fore:#FFFF00,back:#A05050
	 
	# Global default styles for all languages
	# Default
	style.*.32=$(font.base),back:#101010,fore:$(colour.generalText.fore)
	# Line number
	style.*.33=$(font.base),back:#101010,fore:$(colour.generalText.fore)
	# Brace highlight
	style.*.34=fore:#FFFFEE,bold
	# Brace incomplete highlight
	style.*.35=fore:#FF0000,bold
	# Control characters
	style.*.36=
	# Indentation guides
	style.*.37=fore:#507050
	 
	# Comment italique
	style.*.1=$(colour.code.comment.box),$(font.code.comment.box),italics
	style.*.2=$(colour.code.comment.line),$(font.code.comment.line),italics
	style.*.3=$(colour.code.comment.doc),$(font.code.comment.doc),italics
	 
	# White space
	style.*.0=fore:#808080
	# Number
	style.*.4=$(colour.number)
	 
	# Keyword
	style.cpp.5=$(colour.keyword),bold
	 
	# Double quoted string
	style.*.6=$(colour.string)
	# Single quoted string
	style.*.7=$(colour.char)
	# UUIDs (only in IDL)
	style.*.8=fore:#7F7F00
	# Preprocessor
	style.*.9=$(colour.preproc)
	# Operators
	style.*.10=$(colour.operator)
	 
	# Identifiers
	style.*.11=
	# End of line where string is not closed
	style.*.12=$(colour.string),back:#5A5050,eolfilled
	# Verbatim strings for C#
	style.*.13=$(colour.string),back:#5A5050,eolfilled
	# Regular expressions for JavaScript
	style.*.14=$(colour.string),back:#5A5050,eolfilled
	# Doc Comment Line
	style.*.15=$(colour.code.comment.doc),$(font.code.comment.doc)
	# Keywords2
	style.*.16=$(colour.keyword2)
	# Comment keyword
	style.*.17=fore:#3060A0,$(font.code.comment.doc)
	# Comment keyword error
	style.*.18=fore:#804020,$(font.code.comment.doc)
	# Braces are only matched in operator style
	braces.*.style=10
	 
	# Makefile styles
	# Default
	style.makefile.0=$(font.base)
	# Comment: #
	style.makefile.1=$(colour.code.comment.box),$(font.comment),italics
	comment.block.makefile=#~
	# Pre-processor or other comment: !
	style.makefile.2=$(colour.preproc)
	# Variable: $(x)
	style.makefile.3=fore:#9F9F20
	# Operator
	style.makefile.4=$(colour.operator)
	# Target
	style.makefile.5=$(colour.preproc)
	# Error
	style.makefile.9=$(colour.error),eolfilled
	# Matched Operators
	style.makefile.34=fore:#FF6030,bold
	style.makefile.35=fore:#FF0000,bold
	 
	# Batch styles
	# Default
	style.batch.0=$(font.base)
	# Comment (rem or ::)
	style.batch.1=$(colour.code.comment.box),$(font.comment),italics
	# Keywords
	style.batch.2=$(colour.keyword),bold
	# Label (line beginning with ':')
	style.batch.3=$(colour.preproc),back:#494949,eolfilled
	# Hide command character ('@')
	style.batch.4=$(colour.preproc)
	# External commands
	style.batch.5=fore:#007090,$(font.monospace),bold
	# Variable: %%x (x is almost whatever, except space and %), %n (n in [0-9]), %EnvironmentVar%
	style.batch.6=$(font.base)
	# Operator: * ? < > |
	style.batch.7=$(colour.operator)
	 
	# Bash styles
	# Default
	style.bash.32=$(font.base)
	# White space
	style.bash.0=fore:#808080,$(font.base)
	# Error
	style.bash.1=$(colour.error)
	# Comment
	style.bash.2=$(colour.code.comment.box),$(font.comment),italics
	# Number
	style.bash.3=$(colour.number)
	# Keyword
	style.bash.4=$(colour.keyword),bold
	# Double quoted string
	style.bash.5=$(colour.string),$(font.monospace)
	# Single quoted string
	style.bash.6=$(colour.char),$(font.monospace)
	# Operators
	style.bash.7=$(colour.operator),bold
	# Identifiers (functions, etc.)
	style.bash.8=$(font.base)
	# Scalars: $var
	style.bash.9=fore:#000000,back:#FFE0E0
	# Parameter expansion: ${var}
	style.bash.10=fore:#000000,back:#FFFFE0
	# Back Ticks
	style.bash.11=fore:#FFFF00,back:#A08080
	# Here-doc (delimiter)
	style.bash.12=fore:#000000,back:#DDD0DD
	# Here-doc (single quoted, q)
	style.bash.13=fore:#7F007F,back:#DDD0DD,eolfilled,notbold
	# Braces are only matched in operator style
	braces.bash.style=7
	 
	# PHP
	# Default
	style.hypertext.118=$(font.base)
	# Matching braces
	style.hypertext.34=$(font.base)
	# Not maching braces
	style.hypertext.35=$(coulour.error)
	# Double quoted String
	style.hypertext.119=$(colour.string)
	# Single quoted string
	style.hypertext.120=$(colour.char)
	# Keyword
	style.hypertext.121=$(colour.keyword)
	# Number
	style.hypertext.122=$(colour.number)
	# Variable
	style.hypertext.123=$(colour.keyword2)
	# Comment
	style.hypertext.124=$(colour.code.comment.box)
	# One line comment
	style.hypertext.125=$(colour.code.comment.box)
	# PHP variable in double quoted string
	style.hypertext.126=$(colour.other)
	# PHP operator
	style.hypertext.127=$(font.base)
	 
	# Text
	style.hypertext.0=$(font.base)
	# Tags
	style.hypertext.1=$(colour.keyword3)
	# Unknown Tags
	style.hypertext.2=fore:#FF0000
	# Attributes
	style.hypertext.3=fore:#008080
	# Unknown Attributes
	style.hypertext.4=fore:#FF0000
	 
	# output window
	style.errorlist.32=$(font.small),back:#000000
	style.errorlist.0=fore:#FFFFFF
	style.errorlist.2=fore:#0FFFFF
	style.errorlist.4=fore:#FFFFFF
